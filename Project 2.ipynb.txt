{ "cells": [  {   "cell_type": "code",   "execution_count": 77,   "id": "4297827e",   "metadata": {    "scrolled": true   },   "outputs": [    {     "name": "stdout",     "output_type": "stream",     "text": [      "    METHOD  NMFS_POPID         SPECIES  YEAR  NUMBER_OF_SPAWNERS  \\\n",      "0   Survey          17  Chinook salmon  1981                 896   \n",      "1   Survey          17  Chinook salmon  1982                1825   \n",      "2   Survey          17  Chinook salmon  1983                3547   \n",      "3   Survey          17  Chinook salmon  1984                 532   \n",      "4   Survey          17  Chinook salmon  1985                1596   \n",      "5   Survey          17  Chinook salmon  1986                 539   \n",      "6   Survey          17  Chinook salmon  1987                6025   \n",      "7   Survey          17  Chinook salmon  1988                2850   \n",      "8   Survey          17  Chinook salmon  1989                2708   \n",      "9   Survey          17  Chinook salmon  1990                 493   \n",      "10  Survey          17  Chinook salmon  1991                1889   \n",      "11  Survey          17  Chinook salmon  1992                 796   \n",      "12  Survey          17  Chinook salmon  1993                 794   \n",      "13  Survey          17  Chinook salmon  1994                3572   \n",      "14  Survey          17  Chinook salmon  1995                1321   \n",      "15  Survey          17  Chinook salmon  1996                 494   \n",      "16  Survey          17  Chinook salmon  1997                 595   \n",      "17  Survey          17  Chinook salmon  1998                 353   \n",      "18  Survey          17  Chinook salmon  1999                 575   \n",      "19  Survey          17  Chinook salmon  2000                 370   \n",      "20  Survey          17  Chinook salmon  2001                3860   \n",      "21  Survey          17  Chinook salmon  2002                3299   \n",      "22  Survey          17  Chinook salmon  2003                3792   \n",      "23  Survey          17  Chinook salmon  2004                4611   \n",      "24  Survey          17  Chinook salmon  2005                2066   \n",      "25  Survey          17  Chinook salmon  2006                 622   \n",      "26  Survey          17  Chinook salmon  2007                 335   \n",      "27  Survey          17  Chinook salmon  2008                 780   \n",      "28  Survey          17  Chinook salmon  2009                 604   \n",      "29  Survey          17  Chinook salmon  2010                2410   \n",      "30  Survey          17  Chinook salmon  2011                1192   \n",      "31  Survey          17  Chinook salmon  2012                 147   \n",      "32  Survey          17  Chinook salmon  2013                 657   \n",      "33  Survey          17  Chinook salmon  2014                 554   \n",      "34  Survey          17  Chinook salmon  2015                 989   \n",      "35  Survey          17  Chinook salmon  2016                 397   \n",      "36  Survey          17  Chinook salmon  2017                  95   \n",      "37  Survey          17  Chinook salmon  2018                  14   \n",      "\n",      "                                      POPULATION_NAME  \n",      "0   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "1   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "2   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "3   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "4   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "5   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "6   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "7   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "8   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "9   Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "10  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "11  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "12  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "13  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "14  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "15  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "16  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "17  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "18  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "19  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "20  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "21  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "22  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "23  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "24  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "25  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "26  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "27  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "28  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "29  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "30  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "31  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "32  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "33  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "34  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "35  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "36  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n",      "37  Mill/Abernathy/Germany Creeks Fall (Tule) Chinook  \n"     ]    }   ],   "source": [    "import pandas as pd\n",    "project_2 = pd.read_excel('/Users/aisellers/Downloads/SPS_2022 Biological Viability Assessment.xlsx', sheet_name = 0)\n",    "project_2 = project_2[[\"METHOD\",\"NMFS_POPID\",\"SPECIES\",\"YEAR\",\"NUMBER_OF_SPAWNERS\",\"POPULATION_NAME\"]]\n",    "print(project_2)"   ]  },  {   "cell_type": "code",   "execution_count": 79,   "id": "57c92c9d",   "metadata": {},   "outputs": [    {     "name": "stdout",     "output_type": "stream",     "text": [      "<class 'matplotlib.figure.Figure'>\n"     ]    },    {     "data": {      "text/plain": [       "Text(0, 0.5, 'NUMBER OF SPAWNERS')"      ]     },     "execution_count": 79,     "metadata": {},     "output_type": "execute_result"    },    {     "data": {      "image/png": "\n",      "text/plain": [       "<Figure size 432x288 with 1 Axes>"      ]     },     "metadata": {      "needs_background": "light"     },     "output_type": "display_data"    }   ],   "source": [    "import pandas as pd\n",    "import matplotlib.pyplot as plt\n",    "\n",    "project_2 = pd.read_excel('/Users/aisellers/Downloads/SPS_2022 Biological Viability Assessment.xlsx', sheet_name = 0)\n",    "\n",    "x_data = list(project_2['YEAR'])\n",    "y_data = list(project_2['NUMBER_OF_SPAWNERS'])\n",    "\n",    "fig,ax = plt.subplots()\n",    "print(type(fig))\n",    "\n",    "ax.scatter(x_data,y_data)\n",    "ax.set_xlabel('YEAR')\n",    "ax.set_ylabel('NUMBER OF SPAWNERS')\n"   ]  },  {   "cell_type": "code",   "execution_count": 76,   "id": "11c4571a",   "metadata": {    "scrolled": true   },   "outputs": [    {     "name": "stdout",     "output_type": "stream",     "text": [      "<class 'matplotlib.figure.Figure'>\n",      "[1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018] [896, 1825, 3547, 532, 1596, 539, 6025, 2850, 2708, 493, 1889, 796, 794, 3572, 1321, 494, 595, 353, 575, 370, 3860, 3299, 3792, 4611, 2066, 622, 335, 780, 604, 2410, 1192, 147, 657, 554, 989, 397, 95, 14]\n",      "[1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018] 0     2003.003268\n",      "1     2001.708088\n",      "2     1998.822215\n",      "3     1994.846636\n",      "4     2001.807362\n",      "5     1999.350907\n",      "6     2001.791201\n",      "7     1989.125680\n",      "8     1996.455799\n",      "9     1996.783634\n",      "10    2001.897401\n",      "11    1998.674458\n",      "12    2001.197866\n",      "13    2001.202483\n",      "14    1994.788918\n",      "15    2002.181371\n",      "16    1994.124013\n",      "17    1995.419193\n",      "18    1994.281004\n",      "19    1992.390180\n",      "20    1998.265818\n",      "21    2001.599579\n",      "22    2002.262176\n",      "23    2001.234805\n",      "24    2001.641136\n",      "25    1997.471626\n",      "26    2000.283621\n",      "27    2002.696211\n",      "28    2001.518775\n",      "29    2001.756571\n",      "30    2000.752287\n",      "31    2002.119036\n",      "32    2002.816263\n",      "33    1999.985799\n",      "34    2001.895093\n",      "35    2001.661914\n",      "36    2002.220619\n",      "37    2000.966996\n",      "dtype: float64\n"     ]    },    {     "data": {      "text/plain": [       "Text(0, 0.5, 'NUMBER OF SPAWNERS')"      ]     },     "execution_count": 76,     "metadata": {},     "output_type": "execute_result"    },    {     "data": {      "image/png": "\n",      "text/plain": [       "<Figure size 432x288 with 1 Axes>"      ]     },     "metadata": {      "needs_background": "light"     },     "output_type": "display_data"    },    {     "data": {      "image/png": "\n",      "text/plain": [       "<Figure size 432x288 with 1 Axes>"      ]     },     "metadata": {      "needs_background": "light"     },     "output_type": "display_data"    }   ],   "source": [    "import pandas as pd\n",    "import matplotlib.pyplot as plt\n",    "\n",    "project_2 = pd.read_excel('/Users/aisellers/Downloads/SPS_2022 Biological Viability Assessment.xlsx', sheet_name = 0)\n",    "\n",    "x_data = list(project_2['YEAR'])\n",    "y_data = list(project_2['NUMBER_OF_SPAWNERS'])\n",    "\n",    "fig,ax = plt.subplots()\n",    "print(type(fig))\n",    "\n",    "ax.scatter(x_data,y_data)\n",    "ax.set_xlabel('YEAR')\n",    "ax.set_ylabel('NUMBER OF SPAWNERS')\n",    "\n",    "import statsmodels.formula.api as smf\n",    "formula = \"YEAR ~ NUMBER_OF_SPAWNERS\"\n",    "model = smf.ols(formula,data=project_2)\n",    "model_fit = model.fit()\n",    "\n",    "fig,ax = plt.subplots()\n",    "\n",    "#plot the model predictions \n",    "print(x_data,y_data)\n",    "print(x_data,y_predicted)  \n",    "\n",    "ax.scatter(x_data,y_data)\n",    "\n",    "legend_label = f\"Regression line({formula})\"\n",    "y_predicted = model_fit.fittedvalues\n",    "\n",    "ax.plot(x_data,y_predicted,label=legend_label,color=\"black\",linewidth=2)\n",    "ax.set_xlabel('YEAR',size=\"xx-large\")\n",    "ax.set_ylabel('NUMBER OF SPAWNERS',size=\"xx-large\")\n",    "\n",    "#print(model_fit.summary())"   ]  },  {   "cell_type": "code",   "execution_count": 73,   "id": "645484e5",   "metadata": {},   "outputs": [    {     "name": "stdout",     "output_type": "stream",     "text": [      "                            OLS Regression Results                            \n",      "==============================================================================\n",      "Dep. Variable:                   YEAR   R-squared:                       0.093\n",      "Model:                            OLS   Adj. R-squared:                  0.068\n",      "Method:                 Least Squares   F-statistic:                     3.682\n",      "Date:                Sun, 14 Aug 2022   Prob (F-statistic):             0.0630\n",      "Time:                        21:56:39   Log-Likelihood:                -143.07\n",      "No. Observations:                  38   AIC:                             290.1\n",      "Df Residuals:                      36   BIC:                             293.4\n",      "Df Model:                           1                                         \n",      "Covariance Type:            nonrobust                                         \n",      "======================================================================================\n",      "                         coef    std err          t      P>|t|      [0.025      0.975]\n",      "--------------------------------------------------------------------------------------\n",      "Intercept           2003.0356      2.535    790.186      0.000    1997.895    2008.177\n",      "NUMBER_OF_SPAWNERS    -0.0023      0.001     -1.919      0.063      -0.005       0.000\n",      "==============================================================================\n",      "Omnibus:                        8.949   Durbin-Watson:                   0.409\n",      "Prob(Omnibus):                  0.011   Jarque-Bera (JB):                2.653\n",      "Skew:                          -0.204   Prob(JB):                        0.265\n",      "Kurtosis:                       1.771   Cond. No.                     3.07e+03\n",      "==============================================================================\n",      "\n",      "Notes:\n",      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",      "[2] The condition number is large, 3.07e+03. This might indicate that there are\n",      "strong multicollinearity or other numerical problems.\n",      "[2018, 1999, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 1995, 1996, 1997, 1998, 1981] [14, 575, 1825, 3547, 532, 1596, 539, 6025, 2850, 2708, 493, 1889, 796, 794, 3572, 370, 3860, 3299, 3792, 4611, 2066, 622, 335, 780, 604, 2410, 1192, 147, 657, 554, 989, 397, 95, 1321, 494, 595, 353, 896]\n",      "[2018, 1999, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 1995, 1996, 1997, 1998, 1981] 0     2003.003268\n",      "1     2001.708088\n",      "2     1998.822215\n",      "3     1994.846636\n",      "4     2001.807362\n",      "5     1999.350907\n",      "6     2001.791201\n",      "7     1989.125680\n",      "8     1996.455799\n",      "9     1996.783634\n",      "10    2001.897401\n",      "11    1998.674458\n",      "12    2001.197866\n",      "13    2001.202483\n",      "14    1994.788918\n",      "15    2002.181371\n",      "16    1994.124013\n",      "17    1995.419193\n",      "18    1994.281004\n",      "19    1992.390180\n",      "20    1998.265818\n",      "21    2001.599579\n",      "22    2002.262176\n",      "23    2001.234805\n",      "24    2001.641136\n",      "25    1997.471626\n",      "26    2000.283621\n",      "27    2002.696211\n",      "28    2001.518775\n",      "29    2001.756571\n",      "30    2000.752287\n",      "31    2002.119036\n",      "32    2002.816263\n",      "33    1999.985799\n",      "34    2001.895093\n",      "35    2001.661914\n",      "36    2002.220619\n",      "37    2000.966996\n",      "dtype: float64\n"     ]    },    {     "data": {      "image/png": "\n",      "text/plain": [       "<Figure size 432x288 with 1 Axes>"      ]     },     "metadata": {      "needs_background": "light"     },     "output_type": "display_data"    }   ],   "source": [    "#import libraries\n",    "import pandas as pd\n",    "import matplotlib.pyplot as plt\n",    "\n",    "#load data\n",    "project_2 = pd.read_excel('/Users/aisellers/Downloads/SPS_2022 Biological Viability Assessment.xlsx', sheet_name = 0)\n",    "\n",    "# extract x and y data\n",    "x_data = list(project_2['YEAR'])\n",    "y_data = list(project_2['NUMBER_OF_SPAWNERS'])\n",    "\n",    "#add a regression line\n",    "import statsmodels.formula.api as smf\n",    "formula = \"YEAR ~ NUMBER_OF_SPAWNERS\"\n",    "model = smf.ols(formula,data=project_2)\n",    "model_fit = model.fit()\n",    "\n",    "#set up a figure and axes object\n",    "fig,ax = plt.subplots()\n",    "\n",    "#plot the raw data\n",    "ax.scatter(x_data,y_data,marker='o', color='black')\n",    "              \n",    "#Legend label\n",    "legend_label = f\"Regression line({formula})\"\n",    "              \n",    "#set up y-axks values based on the model preditions              \n",    "y_predicted = model_fit.fittedvalues              \n",    "\n",    "#plot the line\n",    "ax.plot(x_data,y_predicted,label=legend_label,color=\"black\",linewidth=2)\n",    "\n",    "#set up x and y axis              \n",    "ax.set_xlabel(\"YEAR\",size=\"xx-large\")\n",    "ax.set_ylabel(\"NUMBER_OF_SPAWNERS\",size=\"xx-large\")\n",    "             \n",    "#print summary results\n",    "print(model_fit.summary())\n",    "\n",    "#plot the model predictions \n",    "print(x_data,y_data)\n",    "print(x_data,y_predicted)                 \n",    "           "   ]  },  {   "cell_type": "code",   "execution_count": null,   "id": "d3902420",   "metadata": {},   "outputs": [],   "source": []  } ], "metadata": {  "kernelspec": {   "display_name": "Python 3 (ipykernel)",   "language": "python",   "name": "python3"  },  "language_info": {   "codemirror_mode": {    "name": "ipython",    "version": 3   },   "file_extension": ".py",   "mimetype": "text/x-python",   "name": "python",   "nbconvert_exporter": "python",   "pygments_lexer": "ipython3",   "version": "3.9.12"  } }, "nbformat": 4, "nbformat_minor": 5}